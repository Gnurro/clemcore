[
  {
    "type_name": "open",
    "lark": "open: OPEN thing\nOPEN: \"open\"",
    "object_req_attribute": "openable",
    "object_pre_state": ["closed"],
    "object_post_state": "open(THING)",
    "state_changes": [
      {"pre_state": "closed(THING)", "conditions": ["openable(THING)"], "post_state": "open(THING)"}
    ],
    "feedback_template": "The {{ thing }} is now open.",
    "asp": "{ action_t(TURN,open,THING):at_t(TURN,THING,ROOM),closed_t(TURN,THING) } 1 :- turn(TURN), at_t(TURN,player1,ROOM), not turn_limit(TURN).\nopen_t(TURN+1,THING) :- action_t(TURN,open,THING).\nopen_t(TURN+1,THING) :- turn(TURN), open_t(TURN,THING), not action_t(TURN,close,THING)."
  },
  {
    "type_name": "close",
    "lark": "close: CLOSE thing\nCLOSE: \"close\"",
    "object_req_attribute": "openable",
    "object_pre_state": ["open"],
    "object_post_state": "closed(THING)",
    "state_changes": [
      {"pre_state": "open(THING)", "conditions": ["openable(THING)"], "post_state": "closed(THING)"}
    ],
    "feedback_template": "The {{ thing }} is now closed.",
    "asp": "{ action_t(TURN,close,THING):at_t(TURN,THING,ROOM),open_t(TURN,THING) } 1 :- turn(TURN), at_t(TURN,player1,ROOM), not turn_limit(TURN).\nclosed_t(TURN+1,THING) :- action_t(TURN,close,THING).\nclosed_t(TURN+1,THING) :- turn(TURN), closed_t(TURN,THING), not action_t(TURN,open,THING)."
  },
  {
    "type_name": "take",
    "lark": "take: TAKE [ thing | thing PREP thing ]\nTAKE: \"take\" | \"grab\"",
    "object_req_attribute": "takeable",
    "object_pre_state": ["in", "on"],
    "object_post_state": "in(THING,inventory)",
    "state_changes": [
      {"pre_state": "on(THING,ANY)", "conditions": ["takeable(THING)"], "post_state": "in(THING,inventory)"},
      {"pre_state": "in(THING,ANY)", "conditions": ["takeable(THING)"], "post_state": "in(THING,inventory)"}
    ],
    "feedback_template": "You take the {{ thing }}. {{ inventory_desc }}"
  },
  {
    "type_name": "put",
    "lark": "put: PUT thing PREP thing\nPUT: \"put\" | \"leave\"",
    "object_req_attribute": "movable",
    "object_pre_state": ["in", "on"],
    "object_post_state": "PREP(THING,TARGET)",
    "state_changes": [
      {"pre_state": "on(THING,ANY)", "conditions": ["movable(THING)", "support(TARGET)"], "post_state": "on(THING,TARGET)"},
      {"pre_state": "on(THING,ANY)", "conditions": ["movable(THING)", "container(TARGET)"], "post_state": "in(THING,TARGET)"},
      {"pre_state": "in(THING,ANY)", "conditions": ["movable(THING)", "support(TARGET)"], "post_state": "on(THING,TARGET)"},
      {"pre_state": "in(THING,ANY)", "conditions": ["movable(THING)", "container(TARGET)"], "post_state": "in(THING,TARGET)"}
    ],
    "feedback_template": "The {{ thing }} is now {{ prep }} the {{ target }}."
  },
  {
    "type_name": "go",
    "lark": "go: GO \"to\"* thing\nGO: \"go\"",
    "object_pre_state": ["at"],
    "object_post_state": "at(PLAYER,TARGET)",
    "state_changes": [
      {"pre_state": "at(PLAYER,HERE)", "conditions": ["exit(HERE,TARGET)"], "post_state": "at(PLAYER,TARGET)"},
      {"pre_state": "at(THING,HERE)", "conditions": ["in(THING,inventory)"], "post_state": "at(THING,TARGET)"}
    ],
    "feedback_template": "{{ room_desc }}",
    "asp": "{ action_t(TURN,go,TARGET):exit(ROOM,TARGET) } 1 :- turn(TURN), at_t(TURN,player1,ROOM), not turn_limit(TURN).\nat_t(TURN+1,player1,TARGET) :- action_t(TURN,go,TARGET).\nat_t(TURN+1,player1,ROOM) :- turn(TURN), at_t(TURN,player1,ROOM), not action_t(TURN,go,_).\n% things in inventory move with player:\nat_t(TURN+1,THING,TARGET) :- action_t(TURN,go,TARGET), in_t(TURN,THING,inventory).\n% things not in inventory stay in the room they are:\nat_t(TURN+1,THING,ROOM) :- turn(TURN), at_t(TURN,THING,ROOM), not in_t(TURN,THING,inventory), not turn_limit(TURN)."
  }
]